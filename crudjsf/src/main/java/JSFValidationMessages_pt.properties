# ==============================================================================
# component
# ==============================================================================
javax.faces.component.UIInput.CONVERSION={0}: Ocorreu um erro na convers\u00E3o do valor existente no campo {0}.
javax.faces.component.UIInput.REQUIRED={0}: valor \u00E9 obrigat\u00F3rio.
javax.faces.component.UIInput.UPDATE={0}: Ocorreu um erro no processamento da informa\u00E7\u00E3o submetida.
javax.faces.component.UISelectOne.INVALID={0}: informa\u00E7\u00E3o inv\u00E1lida.
javax.faces.component.UISelectMany.INVALID={0}: informa\u00E7\u00E3o inv\u00E1lida.
primefaces.captcha.INVALID = {0}: Erro de Valida\u00e7\u00e3o.
primefaces.captcha.INVALID_detail = {0}: ''{1}'' n\u00E3o confere com o texto mostrado
primefaces.password.INVALID_MATCH = {0}: Erro de Valida\u00e7\u00e3o.
primefaces.password.INVALID_MATCH_detail = Confirma\u00E7\u00E3o de senha inv\u00E1lida.

# ==============================================================================
# Converter Errors
# ==============================================================================
javax.faces.converter.BigDecimalConverter.DECIMAL={2}: ''{0}'' deve ser um n\u00FAmero decimal.
javax.faces.converter.BigDecimalConverter.DECIMAL_detail={2}: ''{0}'' deve ser um n\u00FAmero decimal composto por zero ou mais d\u00EDgitos, podendo ser seguido de ponto decimal e parte fracion\u00E1ria. Exemplo: {1}
javax.faces.converter.BigIntegerConverter.BIGINTEGER={2}: ''{0}'' deve ser um n\u00FAmero composto por um ou mais d\u00EDgitos.
javax.faces.converter.BigIntegerConverter.BIGINTEGER_detail={2}: ''{0}'' deve ser um n\u00FAmero composto por um ou mais d\u00EDgitos. Exemplo: {1}
javax.faces.converter.BooleanConverter.BOOLEAN={1}: ''{0}'' deve ser 'Verdadeiro' ou 'Falso'.
javax.faces.converter.BooleanConverter.BOOLEAN_detail={1}: ''{0}'' deve ser 'Verdadeiro' ou 'Falso'. Valores diferentes de 'Verdadeiro' ser\u00E3o considerados como 'Falso'.
javax.faces.converter.ByteConverter.BYTE={2}: ''{0}'' deve ser um n\u00FAmero entre 0 e 255.
javax.faces.converter.ByteConverter.BYTE_detail={2}: ''{0}'' deve ser um n\u00FAmero entre 0 e 255.  Exemplo: {1}
javax.faces.converter.CharacterConverter.CHARACTER={1}: ''{0}'' deve ser um caracter v\u00E1lido.
javax.faces.converter.CharacterConverter.CHARACTER_detail={1}: ''{0}'' deve ser um caracter ASCII v\u00E1lido.
javax.faces.converter.DateTimeConverter.DATE={2}: ''{0}'' n\u00E3o pode ser interpretado como data.
javax.faces.converter.DateTimeConverter.DATE_detail={2}: ''{0}'' n\u00E3o pode ser interpretado como data. Exemplo: {1}
javax.faces.converter.DateTimeConverter.TIME={2}: ''{0}'' n\u00E3o pode ser interpretado como hora.
javax.faces.converter.DateTimeConverter.TIME_detail={2}: ''{0}'' n\u00E3o pode ser interpretado como hora. Exemplo: {1}
javax.faces.converter.DateTimeConverter.DATETIME={2}: ''{0}'' n\u00E3o pode ser interpretado como data e hora.
javax.faces.converter.DateTimeConverter.DATETIME_detail={2}: ''{0}'' n\u00E3o pode ser interpretado como data e hora. Exemplo: {1}
javax.faces.converter.DateTimeConverter.PATTERN_TYPE={1}: Um atributo 'pattern' ou 'type' deve ser especificado para converter o valor ''{0}''.
javax.faces.converter.DoubleConverter.DOUBLE={2}: ''{0}'' deve ser um n\u00FAmero composto de um ou mais d\u00EDgitos.
javax.faces.converter.DoubleConverter.DOUBLE_detail={2}: ''{0}'' deve ser um n\u00FAmero entre 4.9E-324 e 1.7976931348623157E308  Exemplo: {1}
javax.faces.converter.EnumConverter.ENUM={2}: ''{0}'' deve ser convers\u00EDvel para enum.
javax.faces.converter.EnumConverter.ENUM_detail={2}: ''{0}'' deve ser convers\u00EDvel para enum a partir do enum que contenha a constante ''{1}''.
javax.faces.converter.EnumConverter.ENUM_NO_CLASS={1}: ''{0}'' deve ser convers\u00EDvel para enum a partir do enum, mas nenhuma classe enum foi fornecida.
javax.faces.converter.EnumConverter.ENUM_NO_CLASS_detail={1}: ''{0}'' deve ser convers\u00EDvel para enum a partir do enum, mas nenhuma classe enum foi fornecida.
javax.faces.converter.FloatConverter.FLOAT={2}: ''{0}'' deve ser um n\u00FAmero composto de um ou mais d\u00EDgitos.
javax.faces.converter.FloatConverter.FLOAT_detail={2}: ''{0}'' deve ser um n\u00FAmero entre 1.4E-45 e 3.4028235E38  Exemplo: {1}
javax.faces.converter.IntegerConverter.INTEGER={2}: ''{0}'' deve ser um n\u00FAmero composto de um ou mais d\u00EDgitos.
javax.faces.converter.IntegerConverter.INTEGER_detail={2}: ''{0}'' deve ser um n\u00FAmero entre -2147483648 e 2147483647 Exemplo: {1}
javax.faces.converter.LongConverter.LONG={2}: ''{0}'' deve ser um n\u00FAmero composto de um ou mais d\u00EDgitos.
javax.faces.converter.LongConverter.LONG_detail={2}: ''{0}'' deve ser um n\u00FAmero entre -9223372036854775808 e 9223372036854775807 Exemplo: {1}
javax.faces.converter.NumberConverter.CURRENCY={2}: ''{0}'' n\u00E3o pode ser interpretado com um valor monet\u00E1rio.
javax.faces.converter.NumberConverter.CURRENCY_detail={2}: ''{0}'' n\u00E3o pode ser interpretado com um valor monet\u00E1rio. Exemplo: {1}
javax.faces.converter.NumberConverter.PERCENT={2}: ''{0}'' n\u00E3o pode ser interpretado como um valor em percentual.
javax.faces.converter.NumberConverter.PERCENT_detail={2}: ''{0}'' n\u00E3o pode ser interpretado como um valor em percentual. Exemplo: {1}
javax.faces.converter.NumberConverter.NUMBER={2}: ''{0}'' n\u00E3o \u00E9 um n\u00FAmero.
javax.faces.converter.NumberConverter.NUMBER_detail={2}: ''{0}'' n\u00E3o \u00E9 um n\u00FAmero. Exemplo: {1}
javax.faces.converter.NumberConverter.PATTERN={2}: ''{0}'' n\u00E3o \u00E9 um n\u00FAmero padr\u00E3o.
javax.faces.converter.NumberConverter.PATTERN_detail={2}: ''{0}'' n\u00E3o \u00E9 um n\u00FAmero padr\u00E3o. Exemplo: {1}
javax.faces.converter.ShortConverter.SHORT={2}: ''{0}'' deve ser um n\u00FAmero composto de um ou mais d\u00EDgitos.
javax.faces.converter.ShortConverter.SHORT_detail={2}: ''{0}'' deve ser um n\u00FAmero entre -32768 e 32767 Exemplo: {1}
javax.faces.converter.STRING={1}: N\u00E3o pode ser convertido ''{0}'' para Texto.


# ==============================================================================
# Validator Errors
# ==============================================================================

javax.faces.validator.BeanValidator.MESSAGE={1}: {0}
javax.faces.validator.DoubleRangeValidator.MAXIMUM={1}: Erro de valida\u00E7\u00E3o: o valor m\u00E1ximo admiss\u00EDvel \u00E9 "{0}".
javax.faces.validator.DoubleRangeValidator.MINIMUM={1}: Erro de valida\u00E7\u00E3o: o valor m\u00EDnimo admiss\u00EDvel \u00E9 ''{0}''.
javax.faces.validator.DoubleRangeValidator.NOT_IN_RANGE={2}: Erro de valida\u00E7\u00E3o: o valor do atributo especificado deve estar entre {0} e {1}.
javax.faces.validator.DoubleRangeValidator.TYPE={0}: Erro de valida\u00E7\u00E3o: O valor n\u00E3o \u00E9 do tipo correto.
javax.faces.validator.LengthValidator.MAXIMUM={1}: Erro de valida\u00E7\u00E3o: o valor m\u00E1ximo admiss\u00EDvel \u00E9 ''{0}''.
javax.faces.validator.LengthValidator.MINIMUM={1}: Erro de valida\u00E7\u00E3o: o valor m\u00EDnimo admiss\u00EDvel \u00E9 ''{0}''.
javax.faces.validator.LongRangeValidator.MAXIMUM={1}: Erro de valida\u00E7\u00E3o: o valor m\u00E1ximo admiss\u00EDvel \u00E9 ''{0}''.
javax.faces.validator.LongRangeValidator.MINIMUM={1}: Erro de valida\u00E7\u00E3o: o valor m\u00EDnimo admiss\u00EDvel \u00E9 ''{0}''.
javax.faces.validator.LongRangeValidator.NOT_IN_RANGE={2}: Erro de valida\u00E7\u00E3o: o valor do atributo especificado deve estar entre {0} e {1}.
javax.faces.validator.LongRangeValidator.TYPE={0}: Erro de valida\u00E7\u00E3o: O valor n\u00E3o \u00E9 do tipo correto.